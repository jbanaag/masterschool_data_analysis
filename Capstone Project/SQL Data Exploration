/* DA105.1 Capstone Project - Data Exploration SQL */
-- Data from bit.io data set

-- How many customers do we have in the data?
SELECT
	COUNT(customer_name)
  FROM customers AS c;
-- Answer: 795

-- What was the city with the most profit for the company in 2015?
SELECT
	o.shipping_city,
	SUM(od.order_profits) AS profits
  FROM 
	orders AS o
 INNER JOIN order_details AS od
 	ON o.order_id = od.order_id
 WHERE shipping_date BETWEEN '2015-01-01' AND '2016-01-01'
 GROUP BY o.shipping_city
 ORDER BY SUM(od.order_profits) DESC
-- Answer: New York City

-- In 2015, what was the most profitable city's profit
SELECT
	o.shipping_city,
	MAX(od.order_profits) AS max_profit
  FROM 
  	orders AS o
 INNER JOIN order_details AS od
    ON o.order_id = od.order_id
 WHERE shipping_date BETWEEN '2015-01-01' AND '2016-01-01'
       AND  o.shipping_city = 'New York City'
 GROUP BY o.shipping_city
-- Answer: 2240
-- Incorrect

-- 2nd attempt
SELECT
   o.shipping_city,
   SUM(od.order_profits) AS profits
  FROM
   orders AS o
 INNER JOIN order_details AS od
    ON o.order_id = od.order_id 
 WHERE DATE_PART('year', o.order_date) = '2015'
   AND o.shipping_city = 'New York City'
 GROUP BY 1
-- Answer: 14753


-- How many different cities do we have in the data?
SELECT DISTINCT
	COUNT(shipping_city)
  FROM
  	orders
-- Answer: 5013 (wrong)

-- 2nd attempt
SELECT
   shipping_city,
   COUNT(*)
  FROM
   orders 
 GROUP BY shipping_city
-- Answer: 531 rows

-- Another solution
SELECT
   COUNT(DISTINCT shipping_city) AS number_of_cities
  FROM
   orders 

-- Show the total spent by customers from low to high
SELECT 
	c.customer_id,
	SUM(od.order_sales) AS sum_order_sales
  FROM
  	customers AS c
 INNER JOIN orders AS o 
    ON c.customer_id = o.customer_id
 INNER JOIN order_details AS od 
    ON o.order_id = od.order_id 
 GROUP BY c.customer_id
 ORDER BY SUM(od.order_sales) ASC;

-- What is the most profitable city in the State of Tennessee?
SELECT
	o.shipping_city,
	SUM(od.order_profits) AS sum_order_profits
  FROM 
  	orders AS o
 INNER JOIN order_details AS od
    ON o.order_id = od.order_id
 WHERE shipping_state = 'Tennessee'
 GROUP BY o.shipping_city
 ORDER BY SUM(od.order_profits) DESC
-- Answer: Lebanon 	 

-- What's the average annual profit for that city across all years?
SELECT
	o.shipping_city,
	AVG(od.order_profits) AS avg_order_profits
 FROM 
  	orders AS o
 INNER JOIN order_details AS od
    ON o.order_id = od.order_id
 WHERE o.shipping_city = 'Lebanon'
 GROUP BY o.shipping_city
-- Answer: 27.67

-- What is the distribution of customer types in the data?
SELECT
	c.customer_segment,
	COUNT(*) AS customer_count
  FROM customers AS c
 GROUP BY c.customer_segment
-- Answer:
-- Consumer 410
-- Corporate 237
-- Home Office 148

-- What's the most profitable product category on 
-- average on Iowa across all years?
SELECT
	p.product_category,
	AVG(od.order_profits) AS avg_order_profits
  FROM 
  	product AS p
 INNER JOIN order_details AS od 
    ON od.product_id = p.product_id
 INNER JOIN orders AS o
    ON o.order_id = od.order_id   
 WHERE o.shipping_state = 'Iowa'
 GROUP BY p.product_category 
 ORDER BY AVG(od.order_profits) DESC
-- Answer: Furniture 

-- What is the most popular product in that category across all states in 2016?
SELECT
   p.product_name,
   SUM(od.quantity) AS order_count
  FROM 
   orders AS o
 INNER JOIN order_details AS od
    ON o.order_id = od.order_id
 INNER JOIN product AS p
    ON od.product_id = p.product_id
 WHERE shipping_date BETWEEN '2016-01-01' AND '2017-01-01'
   AND p.product_category = 'Furniture'
 GROUP BY p.product_name
 ORDER BY SUM(od.quantity) DESC
-- Answer: Global Push Button Manager's Chair, Indigo

-- Which customer got the most discount in the data? (in total amount)
SELECT
   c.customer_id,
   c.customer_name,
   SUM(od.order_discount) AS sum_order_discount
  FROM 
   customers AS c
 INNER JOIN orders AS o
    ON c.customer_id = o.customer_id
 INNER JOIN order_details AS od 
    ON o.order_id = od.order_id 
 GROUP BY c.customer_id, c.customer_name
 ORDER BY SUM(od.order_discount) DESC
-- Answer: Zuschuss Carroll
-- Hint 1: Select the customer id
-- Hint 2: The table has the "order_discount" in percentages and the final price after the discount, "order_sales."
-- So, first, you should get the original price using this formula: original_price = order_sales / (1 - order_discount)
-- Then, subtract from the original_price the "order_sales." discount_amount = original_price - order_sales


SELECT
   c.customer_id,
   c.customer_name,
   od.order_sales/(1-od.order_discount) AS original_price,
   (od.order_sales/(1-od.order_discount)) - od.order_sales AS discount_amount
  FROM 
   customers AS c
 INNER JOIN orders AS o
    ON c.customer_id = o.customer_id
 INNER JOIN order_details AS od 
    ON o.order_id = od.order_id 
 ORDER BY (od.order_sales/(1-od.order_discount)) - od.order_sales DESC
-- Answer 687

-- How widely did monthly profits vary in 2018?
SELECT
   MAX(od.order_profits) AS max_order_profit,
   MIN(od.order_profits) AS min_order_profit,
   MAX(od.order_profits) - MIN(od.order_profits) AS difference
  FROM
   order_details AS od
 INNER JOIN orders AS o
    ON o.order_id = od.order_id 
 WHERE shipping_date BETWEEN '2018-01-01' AND '2019-01-01'
-- Answer: 10560
-- So wrong

-- 2nd attempt
WITH t1 
   AS (
      SELECT 
         TO_CHAR(o.order_date, 'MM-YYYY') AS month,
         SUM(od.order_profits) AS sum_order_profits
        FROM
         order_details AS od 
       INNER JOIN orders AS o
          ON od.order_id = o.order_id
       WHERE DATE_PART('year', order_date) = '2018'
       GROUP BY 1
       ORDER BY 1
      )

SELECT
   *,
   (sum_order_profits- LAG(sum_order_profits, 1, 0) OVER()) AS month_diff
  FROM 
   t1

-- Which order was the highest in 2015?
SELECT
   od.order_id,
   SUM(od.order_sales) AS sum_sales
  FROM
   order_details AS od
 INNER JOIN orders AS o
    ON o.order_id = od.order_id
 WHERE o.order_date BETWEEN '2015-01-01' AND '2016-01-01'
 GROUP BY od.order_id
 ORDER BY SUM(od.order_sales) DESC 
-- Answer: CA-2015-145317

-- What was the rank of each city in the East region in 2015?
SELECT
   o.shipping_city,
   SUM(od.quantity) AS sum_order_sales,
   RANK() OVER(ORDER BY SUM(od.quantity) DESC) AS rank
  FROM 
   orders AS o
 INNER JOIN order_details AS od
    ON o.order_id = od.order_id
 WHERE o.shipping_region = 'East'
   AND DATE_PART('year', o.order_date) = '2015'
 GROUP BY o.shipping_city
-- New York City, Philadelphia, Newark, Fairfield

-- Display customer names for customers who are in the segment 'Consumer'
-- or 'Corporate.' How many customers are there in total? 
SELECT 
   c.customer_name,
   c.customer_segment,
   SUM(CASE WHEN c.customer_segment = 'Consumer'
            THEN 1
            ELSE 0
            END
            ) AS Consumer,
   SUM(CASE WHEN c.customer_segment = 'Consumer'
            THEN 1
            ELSE 0
            END)
      OVER(ORDER BY c.customer_name ASC) AS running_total
  FROM 
   customers AS c
 WHERE customer_segment IN('Consumer', 'Corporate')
 GROUP BY c.customer_name, c.customer_segment
 ORDER BY running_total DESC
-- Answer: 410, 647
-- I read the question wrong

-- 2nd attempt
SELECT
   COUNT(DISTINCT customer_id)
  FROM
   customers
 WHERE customer_segment IN('Consumer', 'Corporate')
-- Answer: 647

-- Calculate the difference between the largest and smallest order
-- quantities for product id '100'
 SELECT
   MAX(od.quantity) AS max_quantity,
   MIN(od.quantity) AS min_quantity,
   MAX(od.quantity) - MIN(od.quantity) AS diff 
  FROM 
   order_details AS od
 WHERE product_id = '100'
-- Answer: 6-2 = 4

-- Calculate the percent of products that are within the category 'Furniture'
SELECT
   COUNT(product_id) AS count_products
  FROM product
 WHERE product_category = 'Furniture'
-- 380

SELECT
   COUNT(product_id)
  FROM product
-- 1850
-- 16.2%

-- 2nd attempt
SELECT
      (SELECT
      COUNT(*)
     FROM 
      product
    WHERE product_category = 'Furniture'
      )::float
      /
      (SELECT
         COUNT(*)
      FROM
         product
      )::float

-- Display the number of duplicate products based on their product manufacturer
SELECT
   product_manufacturer,
   COUNT(*) AS num_of_products
  FROM 
   product
  GROUP BY product_manufacturer
  HAVING COUNT(*) > 1

-- Show the product_subcategory and the total number of products in the subcategory.
-- Show the order from most to least products and then the product_subcategory
-- name ascending
SELECT
   product_subcategory,
   COUNT(product_id)
  FROM 
   product
 GROUP BY product_subcategory
 ORDER BY COUNT(product_id) DESC, product_subcategory ASC

-- Show the product_ids, the sum of quanitities, where the total sum of its
-- product quantities is greater than or equal to 100
SELECT
   p.product_id,
   SUM(o.quantity) AS sum_quantity 
  FROM 
   order_details AS o
 INNER JOIN product AS p
    ON o.product_id = p.product_id
 GROUP BY p.product_id      
HAVING SUM(o.quantity) >= 100